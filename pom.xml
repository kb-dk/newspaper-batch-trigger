<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dk.statsbiblioteket.newspaper</groupId>
        <artifactId>newspaper-parent</artifactId>
        <version>1.5</version>
    </parent>

    <artifactId>newspaper-batch-trigger</artifactId>
    <version>1.9-SNAPSHOT</version>

    <scm>
        <url>https://github.com/statsbiblioteket/newspaper-batch-trigger</url>
        <connection>scm:git:https://github.com/statsbiblioteket/newspaper-batch-trigger.git</connection>
        <developerConnection>scm:git:git@github.com:statsbiblioteket/newspaper-batch-trigger.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>dk.statsbiblioteket.newspaper</groupId>
            <artifactId>newspaper-autonomous-component</artifactId>
            <version>2.11-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.12</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <quiet>true</quiet>
                            <files>
                                <file>${integration.test.newspaper.properties}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <executions>
                    <execution>
                        <!--Delete the latest build as it will be orphaned by the new build below-->
                        <id>remove-prev-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>removeImage</goal>
                        </goals>
                        <configuration>
                            <imageTags>
                                <imageTag>latest</imageTag>
                            </imageTags>
                            <imageName>${project.artifactId}</imageName>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Build the docker image-->
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <imageName>${project.artifactId}</imageName>
                            <baseImage>openjdk:7-jre</baseImage>
                            <env>
                                <!--Default values, can be overridden when container is started-->
                                <artifactId>${project.artifactId}</artifactId>
                                <doms_username>fedoraAdmin</doms_username>
                                <doms_password>fedoraAdminPass</doms_password>
                                <doms_host>doms</doms_host>
                                <doms_port>7880</doms_port>
                                <avis_folder>/avis-upload/</avis_folder>
                                <zookeeper_host>zookeeper</zookeeper_host>
                                <zookeeper_port>2181</zookeeper_port>
                                <sboi_host>sboi</sboi_host>
                                <sboi_port>58608</sboi_port>
                                <interval>30</interval>
                            </env>
                            <runs>
                                <!--Install the package in the right folder-->
                                <run>mkdir /opt/${project.artifactId};\
                                    cd /opt/${project.artifactId};\
                                    mv /tmp/${project.build.finalName}/* .;\
                                    rm -d /tmp/${project.build.finalName};
                                </run>
                                <!--Make /conf the configuration folder-->
                                <run>
                                    mv /tmp/logback.xml /opt/${project.artifactId}/conf/;\
                                    mv /opt/${project.artifactId}/conf /opt/${project.artifactId}/conf.orig
                                </run>
                            </runs>
                            <!--The entrypoint sets up the configuration and runs whatever command is given-->
                            <entryPoint>[ "/dockerEntry.sh" ]</entryPoint>
                            <!--The standard command start the component repeatedly with an interval-->
                            <cmd>[ "while :; do sleep ${interval}; /opt/${artifactId}/bin/trigger-on-new-batch.sh /opt/${artifactId}/conf/trigger-config.properties; done" ]</cmd>
                            <resources>
                                <resource><!--Copy the package to the docker dir, so it is available for the Dockerfile-->
                                    <targetPath>/tmp/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}-package.tar.gz</include>
                                </resource>
                                <resource>
                                    <targetPath>/tmp/</targetPath>
                                    <directory>src/main/docker</directory>
                                    <include>logback.xml</include>
                                </resource>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>src/main/docker</directory>
                                    <include>dockerEntry.sh</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Tag the image with the maven version number-->
                        <id>tag-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${project.artifactId}</image>
                            <newName>statsbiblioteket/${project.artifactId}:${project.version}</newName>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Push the image to SBs account on docker hub-->
                        <id>push-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <imageName>statsbiblioteket/${project.artifactId}:${project.version}</imageName>
                            <serverId>docker-hub</serverId>
                            <registryUrl>https://index.docker.io/v1/</registryUrl>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
